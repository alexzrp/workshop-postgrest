version: '3'

services:
  db:
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_ANON_ROLE=${DB_ANON_ROLE}
      - DB_SCHEMA=${DB_SCHEMA}
    volumes:
      - "pgdata:/var/lib/postgresql/data" # persist the data
      # anything in initdb directory is created in the database
      # see "How to extend this image" section at https://hub.docker.com/r/_/postgres/
      - "./initdb:/docker-entrypoint-initdb.d"
    restart: always

  postgrest:
    image: postgrest/postgrest:latest
    ports:
      - "3000:3000"
    environment:
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - PGRST_DB_SCHEMA=${DB_SCHEMA}
      # The database role to use when no client authentication is provided
      - PGRST_DB_ANON_ROLE=${DB_ANON_ROLE}
    depends_on:
      - db
    restart: always

  postgrest-proxy:
    depends_on:
    - postgrest
    image: nginx:latest
    ports:
    - "3001:3001"
    volumes:
    - "./proxy/nginx.conf:/etc/nginx/conf.d/default.conf"

  swagger:
    image: swaggerapi/swagger-ui
    ports:
    - "8080:8080"
    expose:
    - "8080"
    depends_on:
    - postgrest-proxy
    environment:
      API_URL: http://localhost:3001/

  pgadmin4:
    image: dpage/pgadmin4:5.6
    environment:
      PGADMIN_DEFAULT_EMAIL: "cap@zrp.com.br"
      PGADMIN_DEFAULT_PASSWORD: "cap"
    volumes:
    - ./data:/var/lib/pgadmin/storage
    ports:
    - "6002:80"
    depends_on:
    - db

volumes:
  pgdata: